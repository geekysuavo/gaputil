.\" -*- nroff -*-
.\"
.\" Copyright (C) 2015 Bradley Worley <geekysuavo@gmail.com>.
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to:
.\"
.\"   Free Software Foundation, Inc.
.\"   51 Franklin Street, Fifth Floor
.\"   Boston, MA  02110-1301, USA.
.\"
.ds g \" empty
.ds G \" empty
.de Tp
.ie \\n(.$=0:((0\\$1)*2u>(\\n(.1u-\\n(.iu)) .TP
.el .TP "\\$1"
..
.TH JITUTIL 1 "15 Oct 2015" "nusutils version 20151015"
.SH NAME
jitutil \- build nonuniform jittered rejection-sampling schedules

.SH SYNOPSIS
.B jitutil
\fIdensity\fR \fIN1\fR [\fIN2\fR [\fIN3\fR]] \fIdensfunc\fR

.SH DESCRIPTION
.PP
Build a nonuniform sampling (NUS) schedule on a grid having one, two or
three dimensions. The global sampling density of the schedule must be
specified in \fIdensity\fR as a value between 0 and 1. The arguments
\fIN1\fR, \fIN2\fR and \fIN3\fR are used to specify the size(s) of the
sampling grid to build the schedule upon.
.PP
Finally, the \fIdensfunc\fR argument must be supplied as a string (text)
that holds the sampling density function. It is recommended that the
density function be placed in single quotes in order to ensure proper
parsing.

.SH "DENSITY FUNCTIONS"
Density functions are defined in the Julia programming language. At program
startup, \fBjitutil\fR hands the value specified in \fIdensfunc\fR to a
Julia interpreter, which compiles it for later evaluation. All density
functions must obey the following interface:

.in +4n
.nf

f(x::Array{Float64,1}, N::Array{Float64,1})
.fi
.in

where \fBx\fR is the current grid index and \fBN\fR is an array of grid sizes.
The arrays \fBx\fR and \fBN\fR both contain an element for each dimension in
the sampled grid, and may be indexed accordingly.

.PP
The simplest possible density function is a uniform distribution:
.in +4n
.nf

1.0
.fi
.in

.PP
For another example, exponential sampling is as follows:
.in +4n
.nf

exp(-sum(x ./ N))
.fi
.in

.PP
For more detailed information on the accepted syntax of gap equations,
consult the Julia language documentation.

.SH NOTE
The utility is currently soft-limited to building up to three-dimensional
schedules, but this may be trivially changed in the source code prior to
compilation. See \fIjitutil.h\fR for more information.

.SH CITING
If you use the rejection sampling utility in any published work, it is
requested that you provide attribution to the following peer-reviewed article:

.in +4n
.nf

\fBBradley Worley and Robert Powers\fR,
Deterministic Multidimensional Nonuniform Gap Sampling,
\fIJournal of Magnetic Resonance\fR, 2015, submitted.
.fi
.in

.SH AUTHOR
Bradley Worley <geekysuavo@gmail.com>

.SH COPYRIGHT
Copyright \(co 2015 Bradley Worley <geekysuavo@gmail.com>
.br
This is free software. You may redistribute copies of it under the terms of
version 2.0 of the GNU General Public License
<http://www.gnu.org/licenses/old-licenses/gpl-2.0.html>.
There is NO WARRANTY, to the extent permitted by law.

.SH "SEE ALSO"
.BR gaputil(1),
.BR rejutil(1),
.BR julia(1)
